Conclusions
===========

To conclude, we have successfully implemented an Oclptx, an OpenCL-based version of probabilistic tractography based on the ptx2 algorithm. Our solution is validated for both correctness and speed increase for the deterministic scenario. We also produce results for the probabilistic scenario, and we leave the validation for our sponsor to complete. 

For the deterministic scenario, we run the same set of data from bedpost for ptx2 and Oclptx. We modify ptx2 to seed in exactly the same place that Oclptx seeds, and we run both algorithms. Upon completion, we compute the difference of the sum of the squares of each point along the resultant paths, :math:`{ \langle \chi^2 \rangle } \simeq {O(10^{-13})}`. Such a minute difference between the results is statistically negligible, and indicates the convergence of the algorithms. 

We then test for computation speed between the two algorithms for the same dataset. For a 4000 particle run, ptx2 takes and average of 43s to track, whereas Oclptx reaches completion at an average of 1000ms (~1s). Thus, we see a speed increase of x43 with the GPU implementation. 

TODO: Steve, Jeff: More specific interpretations of the data here. 1 Paragraph each. This information should be very easily drawn from your results so that we do not sound like we are presenting new information.
